@startuml
interface IObjectBall {
 +Reset()
 +OnGoal()
 +Kicked()
}

interface IObjectGoal {
 +Score()
}

interface IObjectPlayer {
 +Kick()
 +Reset()
 +Walk()
 +Run()
 +Right()
 +Left()
 +Jump()
}

interface ICommand
ICommand : +Execute()
ICommand : +Undo()

class Field{
 -ICommand: command
 +EnterField()
 +ExitField()
}

class Player implements IObjectPlayer{
 +Kick()
 +Reset()
 +Walk()
 +Run()
 +Right()
 +Left()
 +Jump()
}

class Goal implements IObjectGoal
Goal : +Score()

class Ball implements IObjectBall {
 +Reset()
 +OnGoal()
 +Kicked()
}

ResetBall -l-- IObjectBall
KickBall -l-- IObjectBall 
RegisterGoal -l-- IObjectGoal
PlayerAction -l-- IObjectPlayer
PlayerMove -l-- IObjectPlayer

Field -l-o ICommand 
note top of Field: Invoker

class PlayerAction implements ICommand
class PlayerAction {
-_receiver: IObject
+Execute()
+Undo()
}

class ResetBall implements ICommand
class ResetBall{
-_receiver: IObject
+Reset(Ball)
+Execute()
+Undo()
}
note bottom of ResetBall: Receiver

class RegisterGoal implements ICommand
class RegisterGoal{
-_receiver: IObject
+OnGoal()
+Execute()
+Undo()
}

class KickBall implements ICommand
class KickBall {
-_receiver: IObject
+Execute()
+Undo()
}

class PlayerMove implements ICommand
class PlayerMove {
-_receiver: IObject
+Execute()
+Undo()
}


Game : +{static} Main()


Game -- IObjectBall
Game -- IObjectPlayer
Game -- IObjectGoal



note top of Game : "Interaje com todos Concrete Commands"
note "Concrete Commands" as N
ResetBall .. N
RegisterGoal .. N
KickBall .. N
PlayerAction .. N
PlayerMove .. N
note "Concrete Receiver" as N1
Player.. N1
Ball .. N1
Goal .. N1
@enduml
